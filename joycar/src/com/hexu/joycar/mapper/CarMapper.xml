<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hexu.joycar.mapper.CarMapper">
	<resultMap type="CarWrapper" id="carWrapperMap">
		<id property="carId" column="car_id"/>
		<result property="userAccount" column="user_account"/>
		<result property="provinceID" column="province_id"/>
		<result property="carNumber" column="car_number"/>
		<result property="carBodyNumber" column="car_body_number"/>		
		<result property="carType" column="car_type"/>		
		<result property="checkTime" column="check_time"/>		
		<result property="nextCheckTime" column="next_check_time"/>	
		<result property="checkStatus" column="check_status"/>	
		<result property="createTime" column="create_time"/>
		<result property="modifiedTime" column="modified_time"/>
		
		<!-- 关联属性 -->
		<result property="carTypeName" column="car_type_name"/>
		<result property="provinceName" column="province_name"/>
		<result property="checkStatusName" column="check_status_name"/>
		
	</resultMap>
	
	
	<!--  
	 * 根据条件分页查询
	 * userAccount ，完全匹配
	 * carType,车辆类型
	 * check_status，0：正常 1：已注销 年检状态
	 * pageModel
	 * @param map
	 -->
	<select id="queryAllByConditions" parameterType="map" resultMap="carWrapperMap">
	
		select        
		       car_id,
		       user_account,
		       province_id,
		       province_name,
		       car_number,
		       car_body_number,
		       car_type,
		       car_type_name,
		       check_time,
		       next_check_time,
		       check_status,
		       check_status_name,
		       create_time,
		       modified_time
		       from(
		            select        
		                   car_id,
		                   user_account,
		                   province_id,
		                   province_name,
		                   car_number,
		                   car_body_number,
		                   car_type,
		                   car_type_name,
		                   check_time,
		                   next_check_time,
		                   check_status,
		                   check_status_name,
		                   create_time,
		                   modified_time,
		                   rownum as rn
		                   from(
		                      select        
		                             car_id,
		                             user_account,
		                             province_id,
		                             province_name,
		                             car_number,
		                             car_body_number,
		                             car_type,
		                             car_type_name,
		                             check_time,
		                             next_check_time,
		                             check_status,
		                             check_status_name,
		                             create_time,
		                             modified_time
		                             from v$car
						             <where>
						             	<if test="userAccount != null">
						             		user_account like #{userAccount}
						             	</if>
						             	<if test="checkStatus != null">
						             		and check_status = #{checkStatus}
						             	</if>
						             	<if test="carType != null">
						             		and car_type = #{carType}
						             	</if>
						             </where>
		                   )
		       )where rn > (#{pageModel.pageNo}-1)*#{pageModel.pageSize}
			   <![CDATA[and rn <= #{pageModel.pageNo}*#{pageModel.pageSize}]]>
	</select>
	
	<!-- 
	 * 条件查询的结果总数
	 * userAccount ，完全匹配
	 * check_status，0：正常 1：已注销 年检状态
	 * @param map
	 -->
	<select id="getCntByConditions" parameterType="map" resultType="int">
		select count(0)
		from v$car
		<where>
			<if test="userAccount != null">
				user_account like #{userAccount}
			</if>
			<if test="checkStatus != null">
				and check_status = #{checkStatus}
			</if>
			<if test="carType != null">
				and car_type = #{carType}
			</if>
		</where>
	
	</select>
	
	<!-- 
	 * 添加车辆
	 userAccount
	 carNumber
	 carBodyNumber
	 carType
	 -->
	<insert id="addCar" parameterType="Car">
		insert into t_car
		       (car_id,
		        user_account,
		        province_id,
		        car_number,
		        car_body_number,
		        car_type,
		        check_time,
		        next_check_time,
		        check_status,
		        create_time,
		        modified_time)
		values(seq_car.nextval,
		        #{userAccount},
		        1,
		        #{carNumber},
		        #{carBodyNumber},
		        #{carType},
		        sysdate ,
		        add_months(sysdate, 12),
		        #{checkStatus},
		        sysdate,
		        sysdate )
	</insert>
	
	<!-- 
	 * 根据车牌号和车架号查询车辆
	 * 两个参数可为空
	 * @param carNumber
	 * @param carBodyNumber
	 * map
	 -->
	<select id="queryByCarNumberAndCarBodyNumber" parameterType="map" resultMap="carWrapperMap">
		  select        
		      car_id,
		      user_account,
		      province_id,
		      province_name,
		      car_number,
		      car_body_number,
		      car_type,
		      car_type_name,
		      check_time,
		      next_check_time,
		      check_status,
		      check_status_name,
		      create_time,
		      modified_time
		      from v$car
			  <where>
					<if test="carNumber != null">
						   car_number like #{carNumber}
					</if>
					<if test="carBodyNumber != null">
						   and car_body_number = #{carBodyNumber}
					</if>
			 </where>
	</select>
	
	<!-- 
	/**
	 * 根据userAccount查询所有车辆记录
	 * @param userAccount
	 -->	
	<select id="queryAllByUserAccount" parameterType="string" resultMap="carWrapperMap">
		  select        
		      car_id,
		      user_account,
		      province_id,
		      province_name,
		      car_number,
		      car_body_number,
		      car_type,
		      car_type_name,
		      check_time,
		      next_check_time,
		      check_status,
		      check_status_name,
		      create_time,
		      modified_time
		      from v$car
		      where user_account = #{userAccount}
	</select>
</mapper>
